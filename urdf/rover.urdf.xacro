<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="my_rover">

    
    <xacro:property name="constant"     value = "0.083333333"/> #1/12
    <xacro:property name="mass"         value = "0.5"/>
    <xacro:property name="width"        value = "0.75"/> 
    <xacro:property name="height"       value = "0.15"/>
    <xacro:property name="depth"        value = "0.4"/>
    <xacro:property name="radius"        value = "0.033"/>
    <xacro:property name="length"        value = "0.018"/>

    <!-- <xacro:macro name="default_inertial" params="mass">
        <inertial>
            <mass value="${mass}" />
            <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0" />
        </inertial>
    </xacro:macro> -->
    
    
    <!-- rover base link -->
    <link name="base_link">

    </link>

    <joint name="base_footprint_joint" type="fixed">
        <parent link="base_link"/>
        <child link="base_footprint"/>
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
    </joint>

    <link name="base_footprint">
        
    </link>

    <joint name="Chassis_joint" type="fixed">
        <parent link="base_link"/>
        <child link="Chassis"/>
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
        <axis xyz="0.0 0.0 0.0"/>       
    </joint>
    
    <link name="Chassis">
        <visual>
            <origin xyz="0.0 0.0 0.15" rpy="0.0 0.0 0.0"/>           
            <geometry>
                <box size="0.75 0.4 0.15" />
            </geometry>
            <material name="">
                <color rgba="1.0 0.3 0.1 1.0"/>
            </material>
        </visual>
        <collision>
            <origin xyz="0.0 0.0 0.15" rpy="0.0 0.0 0.0"/>           
            <geometry>
                <box size="0.75 0.4 0.15" />
            </geometry>
        </collision>
        <inertial>
            <!-- <inertia ixx="${(constant) * (mass * (height*height + depth*depth))}" ixy="0.0" ixz="0.0" 
                iyy="${(constant) * (mass * (width*width + depth*depth))}" iyz="0.0" 
                izz="${(constant) * (mass * (width*width + height*height))}"/> -->
            <mass value="5"/>
            <inertia ixx="${(constant) * (5 * (height*height + depth*depth))}" ixy="0.0" ixz="0.0" 
                    iyy="${(constant) * (5 * (width*width + depth*depth))}" iyz="0.0" 
                    izz="${(constant) * (5 * (width*width + height*height))}"/>
        </inertial>
        
    </link>

    <gazebo reference = "Chassis">
        <material> Gazebo/Orange </material>
    </gazebo>

    <joint name="mount_joint" type="fixed">
        <parent link="Chassis"/>
        <child link="mount_link"/>
        <origin xyz="0.2 0.0 0.25" rpy="0.0 0.0 0.0"/>
    </joint>

    <link name="mount_link">
        <visual>                     
            <geometry>
                <cylinder radius="0.08" length="0.1"/>
            </geometry>
            <material name="">
                <color rgba="0.0 0.0 0.0 1.0"/>
            </material>
        </visual>
        <collision>
            <geometry>
                <cylinder radius="0.08" length="0.1"/>
            </geometry>
        </collision>
    </link> 

    <gazebo reference = "mount_link">
        <material> Gazebo/Black</material>
    </gazebo>  

  <xacro:macro name="wheel" params="name path x y">

    <link name = "${name}_wheel">
        <visual> 
            <geometry>
                <mesh filename="${path}" scale="0.005 0.005 0.005"/> #length = 0.018 radius = "0.066"
            </geometry>
            <material name="">
                <color rgba="1.0 0.0 0.0 1.0"/>
            </material>
        </visual>
        <collision>
            <geometry>
                <mesh filename="${path}" scale="0.005 0.005 0.005"/> #length = 0.018 radius = "0.066"
            </geometry>
        </collision>
        <inertial>
            <!-- <inertia ixx="${constant * mass * ((3*radius*radius) + (length*length))}" ixy="0.0" ixz="0.0"
            iyy="${constant * mass * ((3*radius*radius) + (length*length))}" iyz="0.0"
            izz="${constant * mass * (radius*radius)}" /> -->
            <mass value="1"/>
            <inertia ixx="${constant * 1 * ((3*radius*radius) + (length*length))}" ixy="0.0" ixz="0.0" 
                    iyy="${constant * 1 * ((3*radius*radius) + (length*length))}" iyz="0.0" 
                    izz="${constant * 1 * (radius*radius)}"/>
        </inertial>
        
    </link>
    <joint name="${name}_wheel_joint" type="continuous">
        <parent link="Chassis"/>
        <child link="${name}_wheel"/>
        <origin xyz="${x} ${y} 0.15" rpy="0.0 0.0 0.0"/>
        <axis xyz="0.0 1.0 0.0"/>
        <!-- <limit effort="100.0" lower="-3.14159" upper="3.14159" velocity="6.0"/>  -->
    </joint>

    <!-- This block provides the simulator (Gazebo) with information on a few additional
    physical properties. See http://gazebosim.org/tutorials/?tut=ros_urdf for more-->
    <gazebo reference="${name}_wheel">
      <mu1 value="200.0"/>
      <mu2 value="100.0"/>
      <kp value="10000000.0" />
      <kd value="1.0" />
      <material>Gazebo/Red</material>
    </gazebo>

    <!-- This block connects the wheel joint to an actuator (motor), which informs both
    simulation and visualization of the robot -->
    <transmission name="${name}_wheel_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="${name}_wheel_motor">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
      <joint name="${name}_wheel_joint">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
    </transmission>

  </xacro:macro>

    <!-- wheel creating using macros -->
    <xacro:wheel name = "front_left" path ="package://mobile_robot/meshes/right_tire.stl" x = "0.187" y = "0.245"/>
    <xacro:wheel name = "front_right" path ="package://mobile_robot/meshes/left_tire.stl" x = "0.187" y = "-0.245"/>
    <xacro:wheel name = "rear_left" path ="package://mobile_robot/meshes/right_tire.stl" x = "-0.187" y = "0.245"/>
    <xacro:wheel name = "rear_right" path ="package://mobile_robot/meshes/left_tire.stl" x = "-0.187" y = "-0.245"/>


</robot>



