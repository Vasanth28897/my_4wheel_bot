<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="my_rover">

    
    <xacro:property name="constant"     value = "0.083333333"/> #1/12
    <xacro:property name="mass"         value = "0.5"/>
    <xacro:property name="width"        value = "0.75"/> 
    <xacro:property name="height"       value = "0.15"/>
    <xacro:property name="depth"        value = "0.4"/>
    <xacro:property name="radius"        value = "0.033"/>
    <xacro:property name="length"        value = "0.018"/>

    <!-- rover base link -->
    <link name="world"/>


    <joint name="Chassis_joint" type="fixed">
        <parent link="world"/>
        <child link="Chassis"/>
        <origin xyz="0.0 0.0 0.135" rpy="0.0 0.0 0.0"/>
        <axis xyz="0.0 0.0 0.0"/>       
    </joint>
    
    <link name="Chassis">

        <inertial> 
            <mass value="0.5"/>
            <origin xyz="0.0 0.0 0.135" rpy="0.0 0.0 0.0"/>
            <!-- refer this "urdf/tutorials/adding physical and collision properties into urdf file" page for the equation -->
            <!-- <inertia ixx="${(constant) * (mass * (height*height + depth*depth))}" ixy="0.0" ixz="0.0" 
                     iyy="${(constant) * (mass * (width*width + depth*depth))}" iyz="0.0" 
                     izz="${(constant) * (mass * (width*width + height*height))}"/> -->
            <inertia ixx="0.007601" ixy="0.0" ixz="0.0" 
                     iyy="0.03009" iyz="0.0" 
                     izz="0.024365"/>
        </inertial>
        <visual>
            <geometry>
                <box size="0.75 0.4 0.15" />
            </geometry>
            <material name="">
                <color rgba="1.0 0.3 0.1 1.0"/>
            </material>
        </visual>
        <collision>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <box size="0.75 0.4 0.15" />
            </geometry>
        </collision>
    </link>

    <gazebo reference = "Chassis">
        <material> Gazebo/Orange </material>
    </gazebo> 

        <!-- camera/sensor mount -->
    <joint name="mount_joint" type="fixed">
        <parent link="Chassis"/>
        <child link="mount_link"/>
        <origin xyz="0.2 0.0 0.124" rpy="0.0 0.0 0.0"/>
        <axis xyz="0.0 0.0 0.0"/> 
    </joint>

    <link name="mount_link">
        <inertial>
            <mass value="0.0"/>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <inertia ixx="0.0" ixy="0.0" ixz="0.0"
                    iyy="0.0" iyz="0.0"
                    izz="0.0" />
        </inertial>  
        <visual>                     
            <geometry>
                <cylinder radius="0.08" length="0.1"/>
            </geometry>
            <material name="">
                <color rgba="0.0 0.0 0.0 1.0"/>
            </material>
        </visual>
        <collision>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <cylinder radius="0.08" length="0.1"/>
            </geometry>
        </collision>
    </link> 

    <gazebo reference = "mount_link">
        <material> Gazebo/Black</material>
    </gazebo>  

    <!-- defining xacro style for repeating elements -->
    <xacro:macro name="wheel" params="name path x y">
        
        <joint name="${name}_wheel_joint" type="continuous">
            <parent link="Chassis"/>
            <child link="${name}_wheel"/>
            <origin xyz="${x} ${y} 0.0" rpy="0.0 0.0 0.0"/>
            <axis xyz="0.0 1.0 0.0"/> 
        </joint>
        
        <link name="${name}_wheel">
            <inertial>
                <mass value="0.5"/>
                <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
                <!-- <inertia ixx="${constant * mass * ((3*radius*radius) + (length*length))}" ixy="0.0" ixz="0.0"
                        iyy="${constant * mass * ((3*radius*radius) + (length*length))}" iyz="0.0"
                        izz="${constant * mass * (radius*radius)}" /> -->
                <inertia ixx="0.00042" ixy="0.0" ixz="0.0"
                        iyy="0.00014" iyz="0.0"
                        izz="0.00063" />
            </inertial>             
            <visual>           
                <geometry>
                    <mesh filename="${path}" scale="0.005 0.005 0.005"/> #length = 0.018 radius = "0.066"
                </geometry>
                <material name="">
                    <color rgba="1.0 0.0 0.0 1.0"/>
                </material>
            </visual>
            <collision>
                <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
                <geometry>
                    <cylinder radius="${radius}" length="${length}"/>
                </geometry>
            </collision>

        </link>

        <gazebo reference = "${name}_wheel">
            <material> Gazebo/Red </material>
            <mu1 value="200.0"/>
            <mu2 value="100.0"/>
            <kp value="10000000.0" />
            <kd value="1.0" />
        </gazebo>  

        <transmission name="${name}_wheel_trans">
            <type>transmission_interface/SimpleTransmission</type>
            <actuator name="${name}_wheel_motor">
                <mechanicalReduction>1</mechanicalReduction>
            </actuator>
            <joint name="${name}_wheel_joint">
                <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
            </joint>
        </transmission>
    </xacro:macro>


    <!-- wheel creating using macros -->
    <xacro:wheel name = "front_left" path ="package://mobile_robot/meshes/right_tire.stl" x = "0.187" y = "0.25"/>
    <xacro:wheel name = "front_right" path ="package://mobile_robot/meshes/left_tire.stl" x = "0.187" y = "-0.25"/>
    <xacro:wheel name = "rear_left" path ="package://mobile_robot/meshes/right_tire.stl" x = "-0.187" y = "0.25"/>
    <xacro:wheel name = "rear_right" path ="package://mobile_robot/meshes/left_tire.stl" x = "-0.187" y = "-0.25"/>


</robot>
